from aiogram import html, F
from aiogram import Router
from aiogram.types import (
    ContentType,
    ReplyKeyboardRemove,
    Message,
)
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from dotenv import load_dotenv
from os import getenv
# import os

from bot_instance import bot
import app.keyboards as kb

load_dotenv()
LISA = getenv("LISA")
if not LISA:
    raise ValueError("–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è LISA –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

# Get the absolute path of the project root
# project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Construct the absolute path to the video file
# about_path = os.path.join(project_root, "files", "price.jpeg")

about = "BAACAgIAAxkDAAIBfGbj014K73POtOAv5tOFvAgfY9IjAALrUgACecggSxiWTiNbld_kNgQ"
nahui = "BAACAgIAAxkDAAIB1mbj2veAIO0J7NWJhIRu-ma3LPewAAIyUwACecggS_8a3AIdm0F2NgQ"
dohuia = "BAACAgIAAxkDAAIB2Gbj2yR1W9yyJey-3qVn9WTgVwlaAAI0UwACecggSxCGtEEfIurzNgQ"
singing = "BAACAgIAAxkDAAICA2bj3piG8SCNhpL24j-mCy4BXxZ9AAJJUwACecggS1kHuuTLISRYNgQ"
price = "AgACAgIAAxkDAAIEpGbqec_3L3PtsCncumtnj-wjQoUQAAKk3zEb9GlZS2xkYdR5kbwKAQADAgADbQADNgQ"

router = Router()


class Form(StatesGroup):
    vocal_experience = State()
    music_goals = State()
    learning_goals = State()
    number = State()


# class Contact(StatesGroup):
#     number = State()

user_data_dict = {}
files_dict = {}


@router.message(CommandStart())
async def command_start_handler(message: Message, state: FSMContext) -> None:
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {html.bold(message.from_user.first_name)}!\n"
        f"–¢—ã –ø–æ–ø–∞–ª –≤ –ö—É–¥—Ä—è–≤—ã–π –ë–æ—Ç! üé§‚ú®\n\n"
        "–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –õ–∏–∑–µ –æ—Ç—Å–µ—è—Ç—å —Å–ø–∞–º –∏ –Ω–∞–∑–æ–π–ª–∏–≤—ã—Ö —Ñ–∞–Ω–∞—Ç–æ–≤. "
        "–î–∞–≤–∞–π —è –∑–∞–¥–∞–º —Ç–µ–±–µ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤—ã —Å –õ–∏–∑–æ–π –æ—Ç–ª–∏—á–Ω–æ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç–µ—Å—å ‚úåüèª\n\n"
        "–¢—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –∑–∞–Ω–∏–º–∞–ª—Å—è –≤–æ–∫–∞–ª–æ–º? \n"
        "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ—ë–º –æ–ø—ã—Ç–µ",
        reply_markup=ReplyKeyboardRemove(),
    )
    await state.set_state(Form.vocal_experience)


@router.message(Command("about"))
async def about_command_handler(message: Message) -> None:
    await message.answer_video(
        about,
        width=1028,
        height=1920,
        caption="–î–µ—Ä–∂–∏)",
        duration=63,
    )


@router.message(Command("video"))
async def video_command_handler(message: Message) -> None:
    await message.answer_video(
        singing,
        height=1028,
        width=1920,
        caption="–î–µ—Ä–∂–∏)",
        duration=12,
    )


@router.message(Form.vocal_experience)
async def process_vocal_experience(message: Message, state: FSMContext) -> None:
    await state.update_data(vocal_experience=message.text)
    await message.answer("–ö–∞–∫–∏—Ö —Ü–µ–ª–µ–π —Ç—ã —Ö–æ—á–µ—à—å –¥–æ—Å—Ç–∏—á—å –≤ –º—É–∑—ã–∫–µ?")
    await state.set_state(Form.music_goals)


@router.message(Form.music_goals)
async def process_music_goals(message: Message, state: FSMContext) -> None:
    await state.update_data(music_goals=message.text)
    await message.answer("–ï—Å—Ç—å —á—Ç–æ-—Ç–æ, —á–µ–º—É –æ—Å–æ–±–µ–Ω–Ω–æ –º–µ—á—Ç–∞–µ—à—å –Ω–∞—É—á–∏—Ç—å—Å—è?")
    await state.set_state(Form.learning_goals)


@router.message(Form.learning_goals)
async def process_learning_goals(message: Message, state: FSMContext) -> None:
    await state.update_data(learning_goals=message.text)
    user_data = await state.get_data()
    await message.answer("–°—É–¥—è –ø–æ –≤—Å–µ–º—É, —Ç—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ–π —á–µ–ª–æ–≤–µ–∫!")

    user_data_dict[message.from_user.id] = user_data
    await state.clear()

    await message.answer("–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –õ–∏–∑–µ?", reply_markup=kb.keyboard)


@router.message(F.text == kb.ABOUT)
async def about_handler(message: Message, state: FSMContext) -> None:
    await message.answer_video(
        about,
        width=1028,
        height=1920,
        caption="–î–µ—Ä–∂–∏)",
        duration=63,
    )

    await message.answer(
        "–õ–∏–∑–∞ –æ–±–æ–∂–∞–µ—Ç –¥–µ–ª–∏—Ç—å—Å—è —Ä–∞–¥–æ—Å—Ç—å—é –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∞ –¥–ª—è —Ç–µ–±—è –Ω–µ–±–æ–ª—å—à–æ–π –≥–∞–π–¥ –ø–æ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—é –∏ –≤—ã—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—é —ç–Ω–µ—Ä–≥–∏–∏! üî•"
        "–¢—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ, –∑–∞–ø–∏—Å–∞–≤—à–∏—Å—å –Ω–∞ –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ."
        # "–û—Å—Ç–∞–≤—å —Å–≤–æ–π –Ω–æ–º–µ—Ä, —á—Ç–æ–±—ã –õ–∏–∑–∞ —Å–º–æ–≥–ª–∞ –ª–µ–≥–∫–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π."
    )
    if message.contact:
        user_data_dict[message.from_user.id]["contact"] = message.contact.phone_number
    else:
        await message.answer(
            "–û—Å—Ç–∞–≤—å —Å–≤–æ–π –Ω–æ–º–µ—Ä, —á—Ç–æ–±—ã –õ–∏–∑–∞ —Å–º–æ–≥–ª–∞ –ª–µ–≥–∫–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π.",
            reply_markup=kb.share_number_keyboard,
        )
        await state.set_state(Form.number)


@router.message(F.text == kb.VIDEO)
async def video_handler(message: Message, state: FSMContext) -> None:
    await message.answer_video(
        singing,
        height=1028,
        width=1920,
        caption="–î–µ—Ä–∂–∏)",
        duration=12,
    )

    await message.answer(
        "–õ–∏–∑–∞ –æ–±–æ–∂–∞–µ—Ç –¥–µ–ª–∏—Ç—å—Å—è —Ä–∞–¥–æ—Å—Ç—å—é –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∞ –¥–ª—è —Ç–µ–±—è –Ω–µ–±–æ–ª—å—à–æ–π –≥–∞–π–¥ –ø–æ —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—é –∏ –≤—ã—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—é —ç–Ω–µ—Ä–≥–∏–∏! üî•"
        "–¢—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ, –∑–∞–ø–∏—Å–∞–≤—à–∏—Å—å –Ω–∞ –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ."
    )

    if message.contact:
        contact_info = (
            f"–ò–º—è: {message.from_user.first_name}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {message.from_user}"
        )
        await message.answer(contact_info)
    else:
        await message.answer(
            "–û—Å—Ç–∞–≤—å —Å–≤–æ–π –Ω–æ–º–µ—Ä, —á—Ç–æ–±—ã –õ–∏–∑–∞ —Å–º–æ–≥–ª–∞ –ª–µ–≥–∫–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π.",
            reply_markup=kb.share_number_keyboard,
        )

        await state.set_state(Form.number)


# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞
@router.message(F.content_type == ContentType.CONTACT)
async def contact_handler(message: Message, state: FSMContext):
    await state.update_data(number=message.contact)
    user_data_dict[message.from_user.id]["contact"] = message.contact.phone_number

    await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –∫–æ–Ω—Ç–∞–∫—Ç, —Ç–µ–ø–µ—Ä—å –æ–Ω–∞ –Ω–µ –ø–æ—Ç–µ—Ä—è–µ—Ç —Ç–µ–±—è")

    await message.answer(
        f"{message.from_user.first_name}, –∞ —Ç–µ–ø–µ—Ä—å –ø–æ—Ä–∞–¥—É–π –º–µ–Ω—è ‚Äî –∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω—ã–π —É—Ä–æ–∫ –≤–æ–∫–∞–ª–∞ –∫ –õ–∏–∑–µ –∏ —Å 20% —Å–∫–∏–¥–∫–æ–π,"
        "—Ç—ã –≤–µ–¥—å –Ω–µ¬†–∏–∑ —Ç–µ—Ö, –∫—Ç–æ –≥–æ—Ç–æ–≤ —É–ø—É—Å—Ç–∏—Ç—å —Å–≤–æ–π —à–∞–Ω—Å?"
    )

    await message.answer(
        "–£–∂–µ —á–µ—Ä–µ–∑ 4 –∑–∞–Ω—è—Ç–∏—è —Ç—ã –∑–∞–º–µ—Ç–∏—à—å —Ä–µ–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è ‚Äî –∏ —É—Å–ª—ã—à–∏—à—å –∏—Ö —Ç–æ–∂–µ! –ó–∞–ø–∏—à–µ–º—Å—è? üòâ"
    )

    await message.answer_photo(
        price, caption="–ü—Ä–∞–π—Å", reply_markup=kb.appointment_keyboard
    )

    await message.answer(
        "–¢—ã –º–æ–ª–æ–¥–µ—Ü! –ñ–µ–ª–∞—é —É—Å–ø–µ—Ö–æ–≤ –≤ –æ—Å–≤–æ–µ–Ω–∏–∏ –≤–æ–∫–∞–ª–∞ –∏ –º–æ—Ä–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è –æ—Ç –∑–∞–Ω—è—Ç–∏–π! ‚úåüèª\n"
        "–ë—É–¥—å —É–≤–µ—Ä–µ–Ω –≤ —Å–µ–±–µ, –Ω–µ —Å–¥–∞–≤–∞–π—Å—è –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –ø—Ä–æ—Ü–µ—Å—Å–æ–º! üî•",
        reply_markup=ReplyKeyboardRemove(),
    )

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –õ–∏–∑–µ
    user_info = (
        f"–ù–æ–≤—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —É—à–Ω–æ–π –Ω–∞—Å–∏–ª—å–Ω–∏–∫:\n"
        f"- –ò–º—è: {message.from_user.first_name}\n"
        f"- –û–ø—ã—Ç –≤–æ–∫–∞–ª–∞: {user_data_dict[message.from_user.id]['vocal_experience']}\n"
        f"- –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ —Ü–µ–ª–∏: {user_data_dict[message.from_user.id]['music_goals']}\n"
        f"- –¶–µ–ª–∏ –æ–±—É—á–µ–Ω–∏—è: {user_data_dict[message.from_user.id]['learning_goals']}\n"
        f"- –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user_data_dict[message.from_user.id]['contact']}"
        "–ë—ã–ª –±—ã —É –º–µ–Ω—è —Ö—É–π, –µ–≥–æ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –æ—Ç—Å–æ—Å–∞—Ç—å"
    )

    try:
        await bot.send_message(chat_id=LISA, text=user_info)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID {LISA}: {e}")
    await state.clear()


@router.message(Form.number)
async def phone_number_handler(message: Message, state: FSMContext) -> None:
    await state.update_data(number=message.text)
    user_data = await state.get_data()
    await message.answer(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –∫–æ–Ω—Ç–∞–∫—Ç, —Ç–µ–ø–µ—Ä—å –æ–Ω–∞ –Ω–µ –ø–æ—Ç–µ—Ä—è–µ—Ç —Ç–µ–±—è",
        reply_markup=ReplyKeyboardRemove(),
    )

    await message.answer(
        f"{message.from_user.first_name}, –∞ —Ç–µ–ø–µ—Ä—å –ø–æ—Ä–∞–¥—É–π –º–µ–Ω—è ‚Äî –∑–∞–ø–∏—à–∏—Å—å –Ω–∞ –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω—ã–π —É—Ä–æ–∫ –≤–æ–∫–∞–ª–∞ –∫ –õ–∏–∑–µ –∏ —Å 20% —Å–∫–∏–¥–∫–æ–π,"
        "—Ç—ã –≤–µ–¥—å –Ω–µ¬†–∏–∑ —Ç–µ—Ö, –∫—Ç–æ –≥–æ—Ç–æ–≤ —É–ø—É—Å—Ç–∏—Ç—å —Å–≤–æ–π —à–∞–Ω—Å?"
    )

    await message.answer(
        "–£–∂–µ —á–µ—Ä–µ–∑ 4 –∑–∞–Ω—è—Ç–∏—è —Ç—ã –∑–∞–º–µ—Ç–∏—à—å —Ä–µ–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è ‚Äî –∏ —É—Å–ª—ã—à–∏—à—å –∏—Ö —Ç–æ–∂–µ! –ó–∞–ø–∏—à–µ–º—Å—è? üòâ"
    )

    user_data_dict[message.from_user.id]["contact"] = user_data["number"]

    await message.answer_photo(
        price, caption="–ü—Ä–∞–π—Å", reply_markup=kb.appointment_keyboard
    )

    await message.answer(
        "–¢—ã –º–æ–ª–æ–¥–µ—Ü! –ñ–µ–ª–∞—é —É—Å–ø–µ—Ö–æ–≤ –≤ –æ—Å–≤–æ–µ–Ω–∏–∏ –≤–æ–∫–∞–ª–∞ –∏ –º–æ—Ä–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è –æ—Ç –∑–∞–Ω—è—Ç–∏–π! ‚úåüèª\n"
        "–ë—É–¥—å —É–≤–µ—Ä–µ–Ω –≤ —Å–µ–±–µ, –Ω–µ —Å–¥–∞–≤–∞–π—Å—è –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –ø—Ä–æ—Ü–µ—Å—Å–æ–º! üî•",
        reply_markup=ReplyKeyboardRemove(),
    )

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –õ–∏–∑–µ
    user_info = (
        f"–ù–æ–≤—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —É—à–Ω–æ–π –Ω–∞—Å–∏–ª—å–Ω–∏–∫:\n\n"
        f"- –ò–º—è: {message.from_user.first_name}\n"
        f"- –û–ø—ã—Ç –≤–æ–∫–∞–ª–∞: {user_data_dict[message.from_user.id]['vocal_experience']}\n"
        f"- –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ —Ü–µ–ª–∏: {user_data_dict[message.from_user.id]['music_goals']}\n"
        f"- –¶–µ–ª–∏ –æ–±—É—á–µ–Ω–∏—è: {user_data_dict[message.from_user.id]['learning_goals']}\n"
        f"- –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user_data_dict[message.from_user.id]['contact']}\n\n"
        "–ë—ã–ª –±—ã —É –º–µ–Ω—è —Ö—É–π, –µ–≥–æ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –æ—Ç—Å–æ—Å–∞—Ç—å"
    )

    try:
        await bot.send_message(chat_id=LISA, text=user_info)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID {LISA}: {e}")
    await state.clear()
